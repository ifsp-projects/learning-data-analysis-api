[MESSAGES CONTROL]

enable=
  indexing-exception,
  old-raise-syntax,

disable=
  attribute-defined-outside-init,
  bad-option-value,
  bare-except,
  broad-except,
  c-extension-no-member,
  design,
  file-ignored,
  fixme,
  global-statement,
  import-error,
  import-outside-toplevel,
  locally-disabled,
  misplaced-comparison-constant,
  multiple-imports,
  no-self-use,
  relative-import,
  similarities,
  suppressed-message,
  ungrouped-imports,
  unsubscriptable-object,
  useless-object-inheritance, 
  useless-suppression,
  wrong-import-order,
  wrong-import-position,
  consider-using-with,
  raise-missing-from,
  super-with-arguments,
  use-a-generator,
  consider-using-generator,
  unspecified-encoding,
  broad-exception-raised,

[BASIC]

no-docstring-rgx=(__.*__|main)

docstring-min-length=10

module-rgx=^(_?[a-z][a-z0-9_]*)|__init__|__main__|PRESUBMIT|PRESUBMIT_unittest$

const-rgx=^(_?[A-Z][A-Z0-9_]*|__[a-z0-9_]+__|_?[a-z][a-z0-9_]*)$

class-attribute-rgx=^(_?[A-Z][A-Z0-9_]*|__[a-z0-9_]+__|_?[a-z][a-z0-9_]*)$

class-rgx=^_?[A-Z][a-zA-Z0-9]*$

function-rgx=^(?:(?P<exempt>setUp|tearDown|setUpModule|tearDownModule)|(?P<camel_case>_?[A-Z][a-zA-Z0-9]*)|(?P<snake_case>_?[a-z][a-z0-9_]*))$

method-rgx=(?x)
  ^(?:(?P<exempt>_[a-z0-9_]+__|runTest|setUp|tearDown|setUpTestCase
         |tearDownTestCase|setupSelf|tearDownClass|setUpClass
         |(test|assert)_*[A-Z0-9][a-zA-Z0-9_]*|next)
     |(?P<camel_case>_{0,2}[A-Z][a-zA-Z0-9_]*)
     |(?P<snake_case>_{0,2}[a-z][a-z0-9_]*))$

attr-rgx=^_{0,2}[a-z][a-z0-9_]*$

argument-rgx=^[a-z][a-z0-9_]*$

variable-rgx=^[a-z][a-z0-9_]*$

inlinevar-rgx=^[a-z][a-z0-9_]*$

good-names=main,_,maxDiff

bad-names=

[FORMAT]

max-line-length=80

max-module-lines=99999

indent-string='  '

[TYPECHECK]
